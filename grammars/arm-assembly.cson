'scopeName': 'source.asm.arm'
'fileTypes': [
    'asm'
    'ASM'
    's'
    'S'
]
'name': 'ARM Assembly'
'patterns': [
    {
        'include': '#comments'
    }
    {
        'include': '#line_label'
    }
    {
        'include': '#line_directive'
    }
    {
        'include': '#line_directive_req'
    }
    {
        'include': '#line_instruction'
    }
]
'repository':
    'line_label':
        'patterns': [
            {
                'include': '#label_local'
            }
            {
                'include': '#label_global'
            }
        ]
    'line_directive':
        'patterns': [
            {
                'include': '#string'
            }
            {
                'include': '#char'
            }
            {
                'include': '#section'
            }
            {
                'include': '#directive'
            }
            {
                'include': '#numeric'
            }
            {
                'include': '#operator'
            }
        ]
    'line_directive_req':
        'patterns': [
            {
                'include': '#directive'
            }
            {
                'include': '#register_normal'
            }
            {
                'include': '#register_special'
            }
        ]
    'line_instruction':
        'patterns': [
            {
                'include': '#string'
            }
            {
                'include': '#char'
            }
            {
                'include': '#instruction'
            }
            {
                'include': '#register_normal'
            }
            {
                'include': '#register_special'
            }
            {
                'include': '#numeric'
            }
            {
                'include': 'operator'
            }
        ]
    'string':
        'patterns': [
            {
                'begin': '"'
                'beginCaptures':
                    '0':
                        'name': 'punctuation.definition.string.begin.asm.arm'
                'end': '"'
                'endCaptures':
                    '0':
                        'name': 'punctuation.definition.string.end.asm.arm'
                'name': 'string.quoted.double.asm.arm'
                'patterns': [
                    {
                        'include': '#string_char_esc'
                    }
                    {
                        'include': '#continue_line'
                    }
                ]
            }
        ]
    'char':
        'patterns': [
            {
                'begin': '\''
                'end': '\''
                'match': '\'([^\'\\\\]|(?:\\\\.[^\'\\\\]*))\''
                'name': 'string.quoted.single.asm.arm'
                'patterns': [
                    {
                        'include': '#string_char_esc'
                    }
                ]
            }
        ]
    'comments':
        'patterns': [
            {
                'begin': '(@@|;;)'
                'end': '\n'
                'name': 'comment.line.doc.asm.arm'
                'patterns': [
                    {
                        'include': '#comment_doc_hl'
                    }
                ]
            }
            {
                'begin': '/\\*\\*'
                'end': '\\*/'
                'name': 'comment.block.doc.asm.arm'
                'patterns': [
                    {
                        'include': '#comment_doc_hl'
                    }
                ]
            }
            {
                'begin': '(@|;)'
                'end': '\n'
                'name': 'comment.line.asm.arm'
            }
            {
                'begin': '/\\*'
                'end': '\\*/'
                'name': 'comment.block.asm.arm'
            }

        ]
    'section':
        'patterns': [
            {
                'match': '\\.((|ro)data|bss|text)$'
                'name': 'string.section.asm.arm'
            }
        ]
    'instruction':
        'patterns': [
            {
                'match': '\\b(?i)(it{1,3}(|eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al(|eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al(|eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)))|(mrs|adc(|s)|add(|s)|adr|and(|s)|asr(|s)|b|bfc|bfi|bic(|s)|bl|blx|bx|cb(|n)z|cdp|cdp2|clrex|clz|cmn|cmp|cpy|dbg|dmb|dsb|eor(|s)|isb|ldc(|l)|ldc2(|l)|ldm|ldmdb|ldmea|ldr(|b(|t)|d|ex(|b|h)|h(|t)|s(|b(|t)|h(|t))|t)|lsl(|s)|lsr(|s)|mcr(|r)(|2)|mla|mls|mov(|s|t)|mrc(|2)|mrrc(|2)|mrs|msr|mul(|s)|mvn(|s)|neg|nop|orn(|s)|orr(|s)|pld|pli|pop|push|rbit|rev(|16|sh)|ror(|s)|rrx(|s)|rsb|sbc(|s)|sbfx|sdiv|sev|smlal|smull|ssat|stc(|2)(|l)|stm(|ia|ea)|str(|b(|t)|d|ex(|b|h)|h(|t)|s(|b(|t)|h(|t))|t)|sub(|s)|svc|sxt(b|h)|tbb|tbh|teq|tst|ubfx|udiv|umlal|umull|usat|uxtb|uxth|wfe|wfi|yield|(|eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al))|cb(|n)z|bkpt|cps(ie|id)|rsbs|swi|svc)+(?-i)\\b\\s+'
                'name': 'keyword.instruction.asm.arm'
            }
        ]
    'register_normal':
        'patterns': [
            {
                'match': '\\b(?i)(r(0|1(|0|1|2|3|4|5)|2|3|4|5|6|7|8|9))(?-i)\\b'
                'name': 'storage.register.asm.arm'
            }
        ]
    'register_special':
        'patterns': [
            {
                'match': '\\b(?i)(cpsr|sp|lr|pc)(?-i)\\b'
                'name': 'keyword.other.special-method.register.asm.arm'
            }
        ]
    'label_global':
        'patterns': [
            {
                'match': '^\\s*([\\.A-KM-Za-z_\\$][\\.A-Za-z0-9_\\$]*):'
                'captures':
                    '1':
                        'name': 'support.label.global.asm.arm'
            }
        ]
    'label_local':
        'patterns': [
            {
                'match': '^\\s*((|\\.)L[\\.A-Za-z0-9_\\$]*):'
                'captures':
                    '1':
                        'name': 'entity.label.local.asm.arm'
            }
        ]
    'numeric':
        'patterns': [
            {
                'match': '\\b(0x[0-9a-fA-F]+|[0-9]+|0o[0-7]+|0b[01]+)\\b'
                'name': 'constant.numeric.asm.arm'
            }
        ]
    'directive':
        'patterns': [
            {
                'match': '(?i)global|\\.(abort|(align|balign(|w|l))|altmacro|arch(|_extension)|arm|asci(i|z)|bss|bundle|(|2|4|8)byte|cantunwind|cfi|code|comm|cpu|data|def|desc|dim|(|l)double|dword|eabi_attribute|eject|else|endef|endfunc|endif|equ|equiv|eqv|err(|or)|even|exitm|extend|extern|fail|file|fill|float|fn(end|start)|force_thumb|fpu|func|glob(|a)l|gnu|handlerdata|hidden|hword|ident|if(|c|(|n(|ot))def|eq(|t)|ge|gt|le|lt|n(c|e(|s)))|incbin|include|inst(|.(n|w))|int|internal|irp(|c)|lcomm|lflags|line|linkonce|list|ln|loc(|al)|long|ltorg|macro|endm|movsp|mri|noaltmacro|nolist|object_arch|octa|offset|org|p2align|packed|pad|personality(|index)|pool|popsection|previous|print|protected|psize|purgem|pushsection|quad|qword|reloc|rept|req|sbttl|scl|secrel32|section|set(|fp)|short|single|size|skip|sleb128|space|stab(d|n|s)|string(|8|16)|struct|subsection|symver|syntax|tag|text|thumb(|_(func|set))|title|tlsdescseq|type|uleb128|unreq|unwind_raw|val|vsave|version|vtable|warning|weak(|ref)|word|zero)(?-i)\\b'
                'name': 'constant.directive.asm.arm'
            }
        ]
    'operator':
        'patterns': [
            {
                'match': ',|#|=|\\+|\\-|\\*|/|\\&|\\||\\^|~|%|!|<|>|!|\\~|\\?'
                'name': 'keyword.operator.artihmetic'
            }
        ]
    'string_char_esc':
        'patterns': [
            {
                'match': '\\\\(\\\\|[abefnprtv\'"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8})'
                'name': 'constant.character.escape.asm.arm'
            }
        ]
    'comment_doc_hl':
        'patterns': [
            {
                'match': '\\b(asm|__asm(|__)|auto|bool|_Bool|char|_Complex|double|enum|float|_Imaginary|int|long|short|signed|struct|typedef|union|unsigned|void|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|int_least8_t|int_least16_t|int_least32_t|int_least64_t|uint_least8_t|uint_least16_t|uint_least32_t|uint_least64_t|int_fast8_t|int_fast16_t|int_fast32_t|int_fast64_t|uint_fast8_t|uint_fast16_t|uint_fast32_t|uint_fast64_t|intptr_t|uintptr_t|intmax_t|intmax_t|uintmax_t|uintmax_t|(|v)u(8|16|32|64)|(|v)s(8|16|32|64)|glob(|a)l|byte|hword|short|word|int|dword|long|[A-Za-z0-9_]+_t)\\b'
                'name': 'storage.doc.keyword.asm.arm'
            }
            {
                'include': '#string'
            }
            {
                'include': '#char'
            }
        ]
    'continue_line':
        'patterns': [
            {
                'match': '(\\\\)\\s*\\n'
                'captures':
                    '1':
                        'name': 'constant.character.escape.line-continuation.asm.arm'
            }
        ]
